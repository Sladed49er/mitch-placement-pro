generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Carrier {
  id                String   @id @default(cuid())
  carrierId         String   @unique
  name              String
  parentCompany     String?
  amBestRating      String?
  headquarters      String?
  provinces         String[]
  minPremium        Float?
  maxRevenue        Float?
  commissionNew     Float?
  commissionRenewal Float?
  responseTime      String?
  apiEnabled        Boolean  @default(false)
  apiDetails        Json?
  partnerStatus     String?
  specialties       String[]
  products          Json?
  underwritingGuidelines Json?
  brokerPortal      Json?
  contactInfo       Json?
  
  agencySettings    AgencyCarrierSetting[]
  placements        Placement[]
  
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  
  @@index([carrierId])
  @@index([name])
}

model AgencyCarrierSetting {
  id                String   @id @default(cuid())
  carrierId         String
  carrier           Carrier  @relation(fields: [carrierId], references: [carrierId], onDelete: Cascade)
  
  agencyStatus      String   @default("not-appointed")
  appointmentDate   DateTime?
  
  commissionNew     Float?
  commissionRenewal Float?
  volumeBonus       Float?
  contingentBonus   Json?
  
  contacts          Json?
  performance       Json?
  appetiteNotes     Json?
  systemAccess      Json?
  notes             Json?
  
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  updatedBy         String?
  
  @@unique([carrierId])
  @@index([agencyStatus])
}

model Placement {
  id                String   @id @default(cuid())
  referenceNumber   String   @unique @default(cuid())
  
  businessName      String
  postalCode        String
  city              String
  province          String
  contactName       String
  contactEmail      String
  contactPhone      String
  
  businessType      String?
  naicsCode         String?
  naicsDescription  String?
  revenue           Float?
  employees         Int?
  yearsInBusiness   Int?
  
  coverageType      String[]
  effectiveDate     DateTime?
  expiryDate        DateTime?
  
  selectedCarriers  String[]
  carrierId         String?
  carrier           Carrier? @relation(fields: [carrierId], references: [id])
  
  status            String   @default("draft")
  
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  createdBy         String?
  
  @@index([referenceNumber])
  @@index([businessName])
  @@index([status])
}

model User {
  id                String   @id @default(cuid())
  email             String   @unique
  name              String?
  role              String   @default("broker")
  
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  
  @@index([email])
}
